name: Build and Deploy

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: Deploy
    env:
      IMAGE_NAME: ghcr.io/carisky/containers_fetcher
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Deploy to remote host
        if: success()
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login ghcr.io -u "${{ secrets.REGISTRY_USERNAME }}" --password-stdin
            ENV_FILE=/tmp/containers-fetcher.env
            cat <<EOF > "$ENV_FILE"
            PORT=${{ secrets.APP_PORT }}
            API_KEY_HEADER=${{ secrets.API_KEY_HEADER }}
            API_KEYS=${{ secrets.API_KEYS }}
            FIREBIRD_HOST=${{ secrets.FIREBIRD_HOST }}
            FIREBIRD_PORT=${{ secrets.FIREBIRD_PORT }}
            FIREBIRD_DATABASE=${{ secrets.FIREBIRD_DATABASE }}
            FIREBIRD_USER=${{ secrets.FIREBIRD_USER }}
            FIREBIRD_PASSWORD=${{ secrets.FIREBIRD_PASSWORD }}
            FIREBIRD_ROLE=${{ secrets.FIREBIRD_ROLE }}
            FIREBIRD_PAGE_SIZE=${{ secrets.FIREBIRD_PAGE_SIZE }}
            FIREBIRD_CHARSET=${{ secrets.FIREBIRD_CHARSET }}
            FIREBIRD_WIRE_CRYPT=${{ secrets.FIREBIRD_WIRE_CRYPT }}
            FIREBIRD_AUTH_PLUGINS=${{ secrets.FIREBIRD_AUTH_PLUGINS }}
            FIREBIRD_PLUGIN_NAME=${{ secrets.FIREBIRD_PLUGIN_NAME }}
            FIREBIRD_LIBRARY_PATH=${{ secrets.FIREBIRD_LIBRARY_PATH }}
            CONTAINER_LOOKUP_CONCURRENCY=${{ secrets.CONTAINER_LOOKUP_CONCURRENCY }}
            EOF
            docker stop containers-fetcher || true
            docker rm containers-fetcher || true
            docker pull ${{ env.IMAGE_NAME }}:latest
            docker image prune -f --filter "dangling=true"
            docker run -d \
              --name containers-fetcher \
              --restart unless-stopped \
              --env-file "$ENV_FILE" \
              -p 3400:3400 \
              ${{ env.IMAGE_NAME }}:latest
